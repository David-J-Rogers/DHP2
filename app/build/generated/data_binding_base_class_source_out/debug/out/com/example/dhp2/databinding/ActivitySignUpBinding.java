// Generated by view binder compiler. Do not edit!
package com.example.dhp2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dhp2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignUpBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText ageEditText;

  @NonNull
  public final EditText dateOfSurgeryEditText;

  @NonNull
  public final EditText passwordEditText;

  @NonNull
  public final Button signUpButton;

  @NonNull
  public final EditText usernameEditText;

  private ActivitySignUpBinding(@NonNull LinearLayout rootView, @NonNull EditText ageEditText,
      @NonNull EditText dateOfSurgeryEditText, @NonNull EditText passwordEditText,
      @NonNull Button signUpButton, @NonNull EditText usernameEditText) {
    this.rootView = rootView;
    this.ageEditText = ageEditText;
    this.dateOfSurgeryEditText = dateOfSurgeryEditText;
    this.passwordEditText = passwordEditText;
    this.signUpButton = signUpButton;
    this.usernameEditText = usernameEditText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ageEditText;
      EditText ageEditText = ViewBindings.findChildViewById(rootView, id);
      if (ageEditText == null) {
        break missingId;
      }

      id = R.id.dateOfSurgeryEditText;
      EditText dateOfSurgeryEditText = ViewBindings.findChildViewById(rootView, id);
      if (dateOfSurgeryEditText == null) {
        break missingId;
      }

      id = R.id.passwordEditText;
      EditText passwordEditText = ViewBindings.findChildViewById(rootView, id);
      if (passwordEditText == null) {
        break missingId;
      }

      id = R.id.signUpButton;
      Button signUpButton = ViewBindings.findChildViewById(rootView, id);
      if (signUpButton == null) {
        break missingId;
      }

      id = R.id.usernameEditText;
      EditText usernameEditText = ViewBindings.findChildViewById(rootView, id);
      if (usernameEditText == null) {
        break missingId;
      }

      return new ActivitySignUpBinding((LinearLayout) rootView, ageEditText, dateOfSurgeryEditText,
          passwordEditText, signUpButton, usernameEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
