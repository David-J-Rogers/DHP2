// Generated by view binder compiler. Do not edit!
package com.example.dhp2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dhp2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView exerciseStatusTextView;

  @NonNull
  public final Button milestone1Button;

  @NonNull
  public final Button milestone2Button;

  @NonNull
  public final Button milestone3Button;

  @NonNull
  public final Button milestone4Button;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView exerciseStatusTextView, @NonNull Button milestone1Button,
      @NonNull Button milestone2Button, @NonNull Button milestone3Button,
      @NonNull Button milestone4Button) {
    this.rootView = rootView;
    this.exerciseStatusTextView = exerciseStatusTextView;
    this.milestone1Button = milestone1Button;
    this.milestone2Button = milestone2Button;
    this.milestone3Button = milestone3Button;
    this.milestone4Button = milestone4Button;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.exerciseStatusTextView;
      TextView exerciseStatusTextView = ViewBindings.findChildViewById(rootView, id);
      if (exerciseStatusTextView == null) {
        break missingId;
      }

      id = R.id.milestone1Button;
      Button milestone1Button = ViewBindings.findChildViewById(rootView, id);
      if (milestone1Button == null) {
        break missingId;
      }

      id = R.id.milestone2Button;
      Button milestone2Button = ViewBindings.findChildViewById(rootView, id);
      if (milestone2Button == null) {
        break missingId;
      }

      id = R.id.milestone3Button;
      Button milestone3Button = ViewBindings.findChildViewById(rootView, id);
      if (milestone3Button == null) {
        break missingId;
      }

      id = R.id.milestone4Button;
      Button milestone4Button = ViewBindings.findChildViewById(rootView, id);
      if (milestone4Button == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, exerciseStatusTextView,
          milestone1Button, milestone2Button, milestone3Button, milestone4Button);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
